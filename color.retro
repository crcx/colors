( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( Copyright [c] 2009, Charles Childers                      )
( License: ISC                                              )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )

( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( Define words to display colors. This is from the Retro    )
( library: contrib/terminal-colors.retro                    )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
{{
  : ESC$ ( $- ) 27 emit type ;
---reveal---
  : black    s" [30m" ESC$ ;   : onBlack    s" [40m" ESC$ ;
  : red      s" [31m" ESC$ ;   : onRed      s" [41m" ESC$ ;
  : green    s" [32m" ESC$ ;   : onGreen    s" [42m" ESC$ ;
  : yellow   s" [33m" ESC$ ;   : onYellow   s" [43m" ESC$ ;
  : blue     s" [34m" ESC$ ;   : onBlue     s" [44m" ESC$ ;
  : magenta  s" [35m" ESC$ ;   : onMagenta  s" [45m" ESC$ ;
  : cyan     s" [36m" ESC$ ;   : onCyan     s" [46m" ESC$ ;
  : white    s" [37m" ESC$ ;   : onWhite    s" [47m" ESC$ ;
  : normal s" [0m" ESC$ ;      : bold s" [1m" ESC$ ;
}}


( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( Remap 'bye' to reset the colors before exiting.           )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
' bye : bye normal [ compile ] ;


( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( Handle the actions associated with each color             )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
: doColor
  dup 49 =if drop normal red     create ;then
  dup 50 =if drop normal green   32 accept tib find 0 !if d->xt @ execute then ;then
  dup 51 =if drop bold   green   32 accept tib find 0 !if d->xt @ compile then ;then
  dup 52 =if drop normal blue    32 accept tib isNumber? 0; drop tib >number .data ;then
  dup 53 =if drop bold   blue    32 accept tib isNumber? 0; drop tib >number literal, ;then
  dup 54 =if drop normal magenta 32 accept tib find 0 !if d->xt @ .data then ;then
  drop
;
: check dup 96 =if drop key doColor ;then normal black emit ;
: help
  normal red     ." `1 - Create a name" cr
  normal green   ." `2 - Execute a word" cr
  bold   green   ." `3 - Compile a word" cr
  normal blue    ." `4 - Execute a number" cr
  bold   blue    ." `5 - Compile a number" cr
  normal magenta ." `6 - Compile a literal pointer" cr
  normal cr
;
: cf clear help repeat key check again ;
