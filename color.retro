( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )
( Copyright [c] 2009, Charles Childers                      )
( License: ISC                                              )
( ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ )

{{
  : ESC$ ( $- ) 27 emit type ;
---reveal---
  : black    s" [30m" ESC$ ;   : onBlack    s" [40m" ESC$ ;
  : red      s" [31m" ESC$ ;   : onRed      s" [41m" ESC$ ;
  : green    s" [32m" ESC$ ;   : onGreen    s" [42m" ESC$ ;
  : yellow   s" [33m" ESC$ ;   : onYellow   s" [43m" ESC$ ;
  : blue     s" [34m" ESC$ ;   : onBlue     s" [44m" ESC$ ;
  : magenta  s" [35m" ESC$ ;   : onMagenta  s" [45m" ESC$ ;
  : cyan     s" [36m" ESC$ ;   : onCyan     s" [46m" ESC$ ;
  : white    s" [37m" ESC$ ;   : onWhite    s" [47m" ESC$ ;
  : normal s" [0m" ESC$ ;      : bold s" [1m" ESC$ ;
}}

{{
  : b bye ;
---reveal---
  : bye normal b ;
}}
: Fx
  dup 49 =if drop red create ['] .word last @ d->class ! ] ;then
  dup 50 =if drop green 32 accept tib find 0 !if dup d->xt @ swap d->class @ with-class then ;then
  dup 51 =if drop blue 32 accept tib isNumber 0; drop tib >number .data ;then
  dup 52 =if drop magenta create ;then
  drop
;
: check dup 96 =if drop key Fx ;then normal bold emit ;
: help
  red     ." `1 - Create a named entry" cr
  green   ." `2 - Execute a word" cr
  blue    ." `3 - Execute a number" cr
  magenta ." `4 - Create a data structure" cr cr
;
: cf clear help bold repeat key check again ;
