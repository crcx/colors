           _            ____      _
  ___ ___ | | ___  _ __|  _ \ ___| |_ _ __ ___
 / __/ _ \| |/ _ \| '__| |_) / _ \ __| '__/ _ \
| (_| (_) | | (_) | |  |  _ <  __/ |_| | | (_) |
 \___\___/|_|\___/|_|  |_| \_\___|\__|_|  \___/

---------------------------------------------------------------

Chuck Moore's colorForth is an interesting source of ideas. The
design choices have influenced Retro since 2001, and continue
to be worthy of study.

At the same time, one major element has never been fully
examined. That element is the use of color as a syntax element.
To facilitiate study of this, I now present colorRetro.

This is a color based interpreter for Retro. It layers directly
over Retro, so with some care, you should be able to make use
of all aspects of the Retro language.

Each item being entered needs to have a color (action) defined.
This is done by using a two character prefix sequence. This
sequence is started by a backtick and is followed by a color
identifier (a number).


 Sequence   Color         Action
 -----------------------------------------------
 `1         red           Create a name
 `2         green         Execute a word
 `3         dark green    Compile a word
 `4         blue          Push number to stack
 `5         dark blue     Compile a number
 `6         magenta       Push pointer to stack
 `7         dark magenta  Compile pointer
 -----------------------------------------------

If you enter something with no sequence prefix, it will be
shown in black and treated as a comment.

---------------------------------------------------------------

Requirements:

 - Console Ngaro VM
   *** Not curses based ***
 - The included image file
 - colors.retro

To use:

 retro --with colors.retro

Read the help text.

Updates to code at http://github.com/crcx/colors

Windows is *not* supported at this time. Sorry.
