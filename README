           _            ____      _
  ___ ___ | | ___  _ __|  _ \ ___| |_ _ __ ___
 / __/ _ \| |/ _ \| '__| |_) / _ \ __| '__/ _ \
| (_| (_) | | (_) | |  |  _ <  __/ |_| | | (_) |
 \___\___/|_|\___/|_|  |_| \_\___|\__|_|  \___/

---------------------------------------------------------------

Chuck Moore's colorForth is an interesting source of ideas. The
design choices have influenced Retro since 2001, and continue
to be worthy of study.

At the same time, one major element has never been fully
examined. That element is the use of color as a syntax element.
To facilitiate study of this, I now present colorRetro.

This is a color based interpreter for Retro. It layers directly
over Retro, so with some care, you should be able to make use
of almost all aspects of the Retro language.

Each item being entered needs to have a color (action) defined.
This is done by using a two character prefix sequence. This
sequence is started by a backtick and is followed by a color
identifier (a number).


 Sequence   Color/Attrib   Action
 ----------------------------------------------------
 `1         red            Create a name
                           Next word will be green.
 `2         green          Execute or Compile words
 `3         blue           Push or Compile pointers
 `4         magenta        Execute a word immediately
 `5         black          Comments
 `6         bold           Start/stop compiler
 ----------------------------------------------------

So, to define a word:

`1name `6code numbers, etc `4; `6

Or, a variable:

`1name value ,

---------------------------------------------------------------

Requirements:

 - Console Ngaro VM
   *** Not curses based ***
 - The included image file
 - colors.retro

To use:

 retro --with colors.retro

Read the help text.

Updates to code at http://github.com/crcx/colors

Windows is *not* supported at this time. Sorry.
